/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

// Request body types

/**
 * Used to create a new Meter (e.g., smart meter for a location)
 * User provides meter details such as code, location, type, and load factors.
 */
interface MeterPostBody {
    data: {
        code: string;
        parent: number | null;
        energyResource: number | null;
        consumptionLoadFactor: number;
        productionLoadFactor: number;
        type: string;
        city: string;
        state: string;
        latitude: number;
        longitude: number;
        pincode: string;
    };
}

/**
 * Used to create a new Energy Resource (House Hold)
 * User provides household name, type, and associated meter.
 */
interface EnergyResourcePostBody {
    data: {
        name: string;
        type: string;
        meter: number;
    };
}

/**
 * Used to create a new DER (Distributed Energy Resource) for an appliance
 * User provides the energy resource and appliance to associate.
 */
interface DerPostBody {
    energy_resource: number;
    appliance: number;
}

// Query parameter types

/**
 * Query params for listing meters.
 * Pagination and population fields are static, user can set page, pageSize, and sorting.
 */
interface MetersGetQuery {
    "pagination[page]"?: number; // User-defined: which page to fetch
    "pagination[pageSize]"?: number; // User-defined: how many items per page
    "populate[0]"?: string; // Static: parent
    "populate[1]"?: string; // Static: energyResource
    "populate[2]"?: string; // Static: children
    "populate[3]"?: string; // Static: appliances
    "sort[0]"?: string; // User-defined: sorting order
}

/**
 * Query params for fetching a meter by id.
 * Population fields are static, user can specify which relations to include.
 */
interface MeterByIdGetQuery {
    "populate[0]"?: string; // Static: parent
    "populate[1]"?: string; // Static: children
}

/**
 * Query params for fetching an energy resource by id.
 * Population fields are static, user can specify which meter relations to include.
 */
interface EnergyResourceByIdGetQuery {
    "populate[0]"?: string; // Static: meter.parent
    "populate[1]"?: string; // Static: meter.children
    "populate[2]"?: string; // Static: meter.appliances
}

export interface paths {
    /**
     * Get Utilities, Substation, Transformer Data
     */
    "/utility/detailed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Utilities,Substation,Transformer Data */
        get: {
            parameters: {
                query?: never;
                header?: {
                    /** @example application/json */
                    "Content-Type"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Reset Data of World Engine
     */
    "/utility/reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Reset Data of World Engine */
        put: {
            parameters: {
                query?: never;
                header?: {
                    /** @example application/json */
                    "Content-Type"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "*/*"?: never;
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Get Grid Loads
     */
    "/grid-loads": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Grid Loads */
        get: {
            parameters: {
                query?: never;
                header?: {
                    /** @example application/json */
                    "Content-Type"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Create a Meter or Get All Meters
     */
    "/meters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get All Meters */
        get: {
            parameters: {
                query?: MetersGetQuery;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        /** Meter */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @example application/json */
                    "Content-Type"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": MeterPostBody;
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Delete Meter with id 5
     */
    "/meters/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                /** The meter id (was 5 in original comment) */
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Meter */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: {
                    /** The meter id (was 5 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Get meter by id 8
     */
    "/meters/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                /** The meter id (was 8 in original comment) */
                id: number;
            };
            cookie?: never;
        };
        /** Get meter by id */
        get: {
            parameters: {
                query?: MeterByIdGetQuery;
                header?: never;
                path?: {
                    /** The meter id (was 8 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Get historical data for meter dataset 1361
     */
    "/meter-datasets/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                /** The meter dataset id (was 1361 in original comment) */
                id: number;
            };
            cookie?: never;
        };
        /** Meter Historical Data */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: {
                    /** The meter dataset id (was 1361 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Create an Energy Resource (House Hold)
     */
    "/energy-resources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Energy-Resource */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @example application/json */
                    "Content-Type"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": EnergyResourcePostBody;
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Get or Delete Energy Resource by id 1326
     */
    "/energy-resources/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                /** The energy resource id (was 1326 in original comment) */
                id: number;
            };
            cookie?: never;
        };
        /** Energy-Resource Get By Id */
        get: {
            parameters: {
                query?: EnergyResourceByIdGetQuery;
                header?: never;
                path?: {
                    /** The energy resource id (was 1326 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        /** Energy-Resource */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: {
                    /** The energy resource id (was 1326 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Create DER (Distributed Energy Resource)
     */
    "/der": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create DER */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": DerPostBody;
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    /**
     * Toggle DER Switching for id 1781
     */
    "/toggle-der/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: {
                /** The DER id (was 1781 in original comment) */
                id: number;
            };
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Toggle DER Switching */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: {
                    /** The DER id (was 1781 in original comment) */
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "*/*"?: never;
                };
            };
            responses: {
                /** @description Successful response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": unknown;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
